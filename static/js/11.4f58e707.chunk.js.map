{"version":3,"sources":["components/pages/SinglePage.js"],"names":["SinglePage","Component","dataType","id","useParams","useState","data","setData","useMarvelService","loading","error","getComic","getCharacter","clearError","useEffect","updateData","console","log","then","onDataLoaded","errorMessage","spinner","content"],"mappings":"0KAoDeA,UAxCI,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,SACjBC,EAAMC,cAAND,GACP,EAAwBE,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA6DC,cAAtDC,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,MAAOC,EAAvB,EAAuBA,SAAUC,EAAjC,EAAiCA,aAAcC,EAA/C,EAA+CA,WAE/CC,qBAAU,WACNC,MACD,CAACZ,IAEJ,IAAMY,EAAa,WAIf,OAHAF,IAEAG,QAAQC,IAAI,yBAA2Bf,GAC/BA,GACJ,IAAK,QACDS,EAASR,GAAIe,KAAKC,GAClB,MACJ,IAAK,YACDP,EAAaT,GAAIe,KAAKC,KAI5BA,EAAe,SAACb,GAClBC,EAAQD,IAGNc,EAAeV,EAAQ,cAAC,IAAD,IAAkB,KACzCW,EAAUZ,EAAU,cAAC,IAAD,IAAa,KACjCa,EAAYb,GAAWC,IAAUJ,EAAmC,KAA3B,cAACL,EAAD,CAAWK,KAAMA,IAEhE,OACI,qCACI,cAAC,IAAD,IACCc,EACAC,EACAC","file":"static/js/11.4f58e707.chunk.js","sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport AppBanner from \"../appBanner/AppBanner\";\n\n// Хотелось бы вынести функцию по загрузке данных как отдельный аргумент\n// Но тогда мы потеряем связь со стэйтами загрузки и ошибки\n// А если вынесем их все в App.js - то они будут одни на все страницы\n\nconst SinglePage = ({Component, dataType}) => {\n        const {id} = useParams();\n        const [data, setData] = useState(null);\n        const {loading, error, getComic, getCharacter, clearError} = useMarvelService();\n\n        useEffect(() => {\n            updateData()\n        }, [id])\n\n        const updateData = () => {\n            clearError();\n            \n            console.log(\"SinglePage dataType - \" + dataType);\n            switch (dataType) {\n                case 'comic':\n                    getComic(id).then(onDataLoaded);\n                    break;\n                case 'character':\n                    getCharacter(id).then(onDataLoaded);\n            }\n        }\n\n        const onDataLoaded = (data) => {\n            setData(data);\n        }\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error || !data) ? <Component data={data}/> : null;\n\n        return (\n            <>\n                <AppBanner/>\n                {errorMessage}\n                {spinner}\n                {content}\n            </>\n        )\n}\n\nexport default SinglePage;"],"sourceRoot":""}